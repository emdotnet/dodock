stages:
  - Unit Tests
  - Build Docker image for Dodock

unittests:
  image: "python:3.10-buster"

  stage: Unit Tests

  services:
    - name: mariadb:10.6
      command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci', '--character-set-client-handshake=FALSE', '--innodb_read_only_compressed=OFF']
    - name: redis
      alias: redis_queue
    - name: redis
      alias: redis_cache
    - name: redis
      alias: redis_socketio

  variables:
    MYSQL_DATABASE: "test_dodock"
    MYSQL_ROOT_PASSWORD: "test_dodock"

  before_script:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-suggests --no-install-recommends mariadb-client xfonts-75dpi xfonts-base
    - export LANG=C.UTF-8
    - export LC_ALL=C.UTF-8
    - export LANGUAGE=en_US.UTF-8
    - wget -q https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.buster_amd64.deb
    - dpkg -i wkhtmltox_0.12.6-1.buster_amd64.deb && rm wkhtmltox_0.12.6-1.buster_amd64.deb
    - rm -rf /var/lib/apt/lists/*
    - rm -rf /etc/apt/sources.list.d/*
    - curl -sL https://deb.nodesource.com/setup_16.x | bash
    - apt-get install -y nodejs
    - npm install --global yarn
    - export PATH=$PATH:/home/dokotest/.local/bin
    - adduser --disabled-password --gecos "" dokotest
    - usermod -aG sudo dokotest
    - echo 'dokotest ALL=(ALL)  NOPASSWD:ALL' >> /etc/sudoers
    - su -c "pip install dokos-cli" dokotest
    - su -c "cd /home/dokotest && bench init dokos-bench --no-backups --skip-redis-config-generation --skip-assets --frappe-path /builds/dokos/dodock/" dokotest
    - su -c "cp -r /home/dokotest/dokos-bench/apps/frappe/test_sites/test_site /home/dokotest/dokos-bench/sites/" dokotest
    - su -c "cd /home/dokotest/dokos-bench && sed -i 's/^watch:/# watch:/g' Procfile"
    - su -c "cd /home/dokotest/dokos-bench && sed -i 's/^schedule:/# schedule:/g' Procfile"
    - su -c "cd /home/dokotest/dokos-bench && sed -i 's/^socketio:/# socketio:/g' Procfile"
    - su -c "cd /home/dokotest/dokos-bench && sed -i 's/^redis_socketio:/# redis_socketio:/g' Procfile"
    - su -c "cd /home/dokotest/dokos-bench && cat Procfile"
    - su -c "cd /home/dokotest/dokos-bench && /home/dokotest/dokos-bench/env/bin/python -m pip install --quiet faker unittest-xml-reporting"
    - su -c "cd /home/dokotest/dokos-bench && bench start &> bench_start.log &" dokotest
    - su -c "cd /home/dokotest/dokos-bench && bench --site test_site reinstall --yes --mariadb-root-password test_dodock" dokotest
    - su -c "cd /home/dokotest/dokos-bench && bench build --app frappe" dokotest

  script:
    - su -c "cd /home/dokotest/dokos-bench && bench --site test_site run-parallel-tests --app frappe" dokotest

build_dodock:
  stage: Build Docker image for Dodock
  only:
    - tags
  image: docker:git
  services:
    - docker:dind
  before_script:
    - docker version
  script:
    - if [[ $CI_COMMIT_REF_SLUG =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        IMAGE_VERSION=$CI_COMMIT_REF_SLUG;
      else
        echo "Not a tagged release, setting image version to latest";
        IMAGE_VERSION=latest;
      fi
    - IMAGE_NAME="$CI_REGISTRY_IMAGE:$IMAGE_VERSION"
    - echo "Building image $IMAGE_NAME"
    - git clone https://github.com/frappe/frappe_docker.git
    - cd frappe_docker
    - export APPS_JSON='[]'
    - export APPS_JSON_BASE64=$(echo ${APPS_JSON} | base64 -w 0)
    - >
      docker build \
        --build-arg=FRAPPE_PATH=https://gitlab.com/dokos/dodock \
        --build-arg=FRAPPE_BRANCH=$CI_COMMIT_REF_SLUG \
        --build-arg=PYTHON_VERSION=3.10.6 \
        --build-arg=NODE_VERSION=16.19.0 \
        --build-arg=APPS_JSON_BASE64="$APPS_JSON_BASE64" \
        --tag=$IMAGE_NAME \
        --file=images/custom/Containerfile .
    - echo "Logging in to registry $CI_REGISTRY"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - echo "Pushing image $IMAGE_NAME"
    - docker push $IMAGE_NAME
